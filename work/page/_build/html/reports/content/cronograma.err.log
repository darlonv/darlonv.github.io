Traceback (most recent call last):
  File "/home/darlon/Pesquisa/git/web/darlonv.github.io/work/.venv/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/darlon/Pesquisa/git/web/darlonv.github.io/work/.venv/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/darlon/Pesquisa/git/web/darlonv.github.io/work/.venv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/darlon/Pesquisa/git/web/darlonv.github.io/work/.venv/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/darlon/Pesquisa/git/web/darlonv.github.io/work/.venv/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/darlon/Pesquisa/git/web/darlonv.github.io/work/.venv/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#Bibliotecas
import plotly.express as px
import pandas as pd
from datetime import date

#Leitura de dados
df = pd.read_csv('projetos.csv')

#Converte para data
df['Start'] = df['Start'].apply(pd.to_datetime) 
df['Finish'] = df['Finish'].apply(pd.to_datetime) 

#Cria a coluna da carga horÃ¡ria com o texto
hora = lambda x : str(x)+' horas' if (x>1) else str(x)+' hora' #Coloca hora no plural ou singular
df['Carga horaria'] = df['Carga'].apply(hora)

#Apenas projetos ainda nÃ£o finalizados
df = df[df['Finish'] > pd.to_datetime(date.today())] 



fig = px.timeline(df, 
                  title='Cronograma',
                  x_start="Start", 
                  x_end="Finish", 
                  y="Task", 
                  color="Tipo",
                  hover_name='Titulo',
                  hover_data={
                      'Task': False,
                      'Start': False,
                      'Finish': False,
                      'Tipo': False,
                      'FunÃ§Ã£o': True,
                      'Carga horaria': True,
                      'Titulo': False,
                      
                  }
                 )
fig.update_yaxes(autorange="reversed", title_text='Projeto')
fig.update_xaxes(title_text='Tempo')
# fig.update_layout(showlegend=True, 
#                   legend=dict(orientation:'h'))

fig.update_layout(
    legend=dict(
        orientation="h",
        yanchor="top",
        y=1.1,
        xanchor="center",
        x=0.5,
        title=''
        )
    )


fig.show()
------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 2[39m
[32m      1[39m [38;5;66;03m#Bibliotecas[39;00m
[32m----> [39m[32m2[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mplotly[39;00m[34;01m.[39;00m[34;01mexpress[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mpx[39;00m
[32m      3[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mpandas[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mpd[39;00m
[32m      4[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mdatetime[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m date

[31mModuleNotFoundError[39m: No module named 'plotly'

